##########During######################################################
##########Not part of scripts#########################################

##hydra -l username -P /usr/share/wordlists ssh://IPADDRESS -I 

###Log Analysis

	#Commands
	cat <filename>
	less <filename>
	head -n3 <filename> 
	tail -n3 -f <filename>									#watch live file changes
	grep -i "<term>" <filename> | wc -l						#search # of lines with keyterm
	awk -F "|" '{print $<col#>}' <filename> | sort | uniq -c		#print sorted list of category with # of instances
	man <command>	
	
	sudo cat /var/log/syslog | grep -i "usb"						#search all lines in syslog with keyterm (nocase)
	sudo cat /var/log/vsftpd.log | grep "FAIL LOGIN"           		#Check for bruteforce attacks (FTP login)
	sudo cat /var/log/auth.log | grep -i "Did not receive"			#Check for portscanners (SSH)
	sudo cat /var/log/auth.log | grep -i "Failed password"			#Check for bruteforce attacks (SSH login)
	sudo awk '{print $1}' /var/log/apache2/access.log | sort | unique -c | sort -rn 	#checks which IP have most frequent requests
	grep "IP_ADDRESS_ATTACKER" /var/log/apache2/access.log | awk '{print $4}' | unique -c #counts IP's requests per second
	grep -Rli "file_name" *											#WHAT DOES THIS DO
	
###Firewall

	#Commands
	sudo iptables -L --line-numbers							#displays firewall rules w/ numbering
	sudo iptables -A INPUT -s 0.0.0.0 -j DROP #-I?			#add new firewall rule to block
	sudo iptables -D INPUT 1								#drop firewall rule on line 1

	#Reset Firewall to Working State
	sudo iptables -F
	sudo iptables -X
	sudo iptables -Z
	sudo iptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT	#allow ssh
	sudo iptables -A INPUT -p tcp -m tcp --dport 21 -j ACCEPT	#allow ftp
	sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT	#allow http
	#allow other services
	sudo iptables -P OUTPUT ACCEPT 								#allow all outgoing 
	sudo iptables -P INPUT DROP									#block all (rest) incoming
	
	#Prevent Brute-force attacks (all ports)
	sudo iptables -I INPUT -p tcp -i AAAA -m state --state NEW -m recent --set
	sudo iptables -I INPUT -p tcp -i AAAA -m state --state NEW -m recent --update --seconds 300 --hitcount 3 -j DROP

###Account Analysis

	#Commands
	sudo passwd -Sa 										#show all users in system
	sudo cat /etc/passwd											#open accounts file
	sudo cat /etc/shadow									#open shadow file
	sudo passwd <username>									#change user password
	sudo userdel -r <username>								#delete user (redundant if password has changed)
	sudo ssh <user>@<IP>									#remote access
	sudo history | less

###Port and Network Analysis

	sudo netstat -atu
	
	

##########Set-up_Basic######################################################
##########Start of scripts##################################################
	
sudo apt-get update -y && apt-get upgrade -y #update and upgrade all packages


###SSH

#Allowing our IPs to ssh to server, dropping everything else
echo "Please enter IP of User 1..."
read ip1
echo "Please enter IP of User 2..."
read ip2
echo "Please enter IP of User 3..."
read ip3
#RETRIEVE IPs of 3 computers before proceeding (Manual)
sudo iptables -A INPUT -p tcp -s $ip1 --dport 22 -j ACCEPT #allow our IPs to access ssh
sudo iptables -A INPUT -p tcp -s $ip2 --dport 22 -j ACCEPT #allow our IPs to access ssh
sudo iptables -A INPUT -p tcp -s $ip3 --dport 22 -j ACCEPT #allow our IPs to access ssh
sudo iptables -A INPUT -p tcp --dport 22 -j DROP #-j or not?

#RETRIEVE USERNAMES of 3 computers before proceeding
sudo echo "AllowUsers USER1 USER2 USER3" >> /etc/ssh/sshd_config 

#Prevent brute-force attacks (SSH only, can be generalized to other ports)
sudo iptables -I INPUT -p tcp --dport 22 -i AAAA -m state --state NEW -m recent --set
sudo iptables -I INPUT -p tcp --dport 22 -i AAAA -m state --state NEW -m recent --update --seconds 300 --hitcount 3 -j DROP

sudo service ssh restart


###FTP

sudo apt-get install vsftpd #?
sudo service vsftpd start #?
echo "local_root=/srv/ftp" >> /etc/vsftpd.conf

#Create SSL certificate to encrypt FTP service
sudo mkdir /etc/ssl/certificates
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/certificates/vsftpd.pem -out /etc/ssl/certificates/vsftpd.pem
sudo echo "rsa_cert_file=/etc/ssl/certificates/vsftpd.pem" >> /etc/vsftpd.conf
sudo echo "rsa_private_key_file=/etc/ssl/certificates/vsftpd.pem" >> /etc/vsftpd.conf
sudo echo "ssl_enable=YES" >> /etc/vsftpd.conf
sudo echo "allow_anon_ssl=NO" >> /etc/vsftpd.conf
sudo echo "force_local_data_ssl=YES" >> /etc/vsftpd.conf
sudo echo "force_local_logins_ssl=YES" >> /etc/vsftpd.conf
sudo echo "ssl_tlsv1=YES" >> /etc/vsftpd.conf
sudo echo "ssl_sslv2=NO" >> /etc/vsftpd.conf
sudo echo "ssl_sslv3=NO" >> /etc/vsftpd.conf
sudo echo "require_ssl_reuse=NO" >> /etc/vsftpd.conf
sudo echo "ssl_ciphers=HIGH" >> /etc/vsftpd.conf

#Write Protection
sudo sed -i "s/anonymous_enable=YES/anonymous_enable=NO/" >> /etc/vsftpd.conf
#sudo sed -i "s/write_enable=YES/#write_enable=YES/" >> /etc/vsftpd.conf
sudo sed -i "s/anon_upload_enable=YES/#anon_upload_enable=YES/" >> /etc/vsftpd.conf
sudo sed -i "s/anon_mkdir_write_enable=YES/#anon_mkdir_write_enable=YES/" >> /etc/vsftpd.conf

sudo service vsftpd restart

#Strengthen password policy
sudo apt-get install libpam-cracklib
sudo echo "auth required pam_tally2.so deny=3 unlock_time=60 even_deny_root_account silent" >> /etc/pam.d/common-auth
sudo sed -i "s/password requisite pam_cracklib.so retry=3 minlen=8 difok=3/password requisite pam_cracklib.so retry=3 minlen=10 difok=3 ucredit=-1 lcredit=-1 dcredit=-1 reject_username/" >> /etc/pam.d/common-password

#Prevent brute-force attacks (FTP only, can be generalized to other ports)
sudo iptables -I INPUT -p tcp --dport 21 -i AAAA -m state --state NEW -m recent --set
sudo iptables -I INPUT -p tcp --dport 21 -i AAAA -m state --state NEW -m recent --update --seconds 300 --hitcount 3 -j DROP


###APACHE2

sudo systemctl start apache2
sudo systemctl enable apache2

#installing modsecurity2 package
sudo apt-get install libapache2-mod-security2
cp /etc/modsecurity/modsecurity.conf-recommended /etc/modsecurity/modsecurity.conf
sudo sed -i "s/SecRuleEngine DetectionOnly/SecRuleEngine on/" >> /etc/modsecurity/modsecurity.conf
sudo systemctl restart apache2

#Installing up-to-date modsecurity ruleset
sudo rm -rf /usr/share/modsecurity-crs
sudo git clone https://github.com/SpiderLabs/owasp-modsecurity-crs.git /usr/share/modsecurity-crs
cd /usr/share/modsecurity-crs
cp crs-setup.conf.example crs-setup.conf
#sudo on security2.conf file
sudo service apache2 restart

#HTTP-Only Cookies
sudo a2enmod headers
sudo service apache2 restart
sudo echo "Header edit Set-Cookie ^(.*)$ $1;HttpOnly;Secure" >> /etc/apache2/conf-available/security.conf
sudo service httpd restart

#Disable Auto-indexing
sudo a2dismod autoindex
sudo service apache2 restart

##########Scripts###############################################################################################





####APACHE2

# Hide Apache2 version
echo "ServerSignature Off" >> /etc/apache2/apache2.conf
echo "ServerTokens Prod" >> /etc/apache2/apache2.conf

# Remove ETags
echo "FileETag None" >> /etc/apache2/apache2.conf
# Disable Directory Browsing
a2dismod -f autoindex
# Remove default page
echo "" > /var/www/html/index.html

# Secure root directory
echo "<Directory />" >> /etc/apache2/conf-available/security.conf
echo "Options -Indexes" >> /etc/apache2/conf-available/security.conf
echo "AllowOverride None" >> /etc/apache2/conf-available/security.conf
echo "Order Deny,Allow" >> /etc/apache2/conf-available/security.conf
echo "Deny from all" >> /etc/apache2/conf-available/security.conf
echo "</Directory>" >> /etc/apache2/conf-available/security.conf

# Secure html directory
echo "<Directory /var/www/html>" >> /etc/apache2/conf-available/security.conf
echo "Options -Indexes -Includes" >> /etc/apache2/conf-available/security.conf
echo "AllowOverride None" >> /etc/apache2/conf-available/security.conf
echo "Order Allow,Deny" >> /etc/apache2/conf-available/security.conf
echo "Allow from All" >> /etc/apache2/conf-available/security.conf
echo "</Directory>" >> /etc/apache2/conf-available/security.conf

# XSS Protection
echo "Header set X-XSS-Protection \"1; mode=block\"" >> /etc/apache2/conf-available/security.conf

# Enforce secure connections to the server
echo "Header always set Strict-Transport-Security \"max-age=31536000; includeSubDomains\"" >> /etc/apache2/conf-available/security.conf

# Prevent Cross-site scripting and injections
echo "Header set Content-Security-Policy \"default-src 'self';\"" >> /etc/apache2/conf-available/security.conf

# Prevent DoS attacks - Limit timeout
sed -i "s/Timeout 300/Timeout 60/" /etc/apache2/apache2.conf

#restart
service apache2 restart



####FILES

# Set /etc/passwd ownership and access permissions.
chown root:root /etc/passwd
chmod 644 /etc/passwd

# Set /etc/shadow ownership and access permissions.
chown root:shadow /etc/shadow
chmod 640 /etc/shadow



####IPTABLES

# Flush/Delete firewall rules
iptables -F
iptables -X
iptables -Z

# Βlock null packets (DoS)
iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP

# Block syn-flood attacks (DoS)
iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP

# Block XMAS packets (DoS)
iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP

# Allow ssh access
iptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT

# Allow established connections
iptables -I INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# Allow outgoing connections
iptables -P OUTPUT ACCEPT
  
# Set default deny firewall policy
iptables -P INPUT DROP

#Save rules
#iptables-save > /etc/iptables/rules.v4



####NETWORK

# Disable IP forwarding
sed -i "s/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=0/" /etc/sysctl.conf
sysctl -w net.ipv4.ip_forward=0

# Disable ICMP redirects
sed -i "/net.ipv4.conf.all.accept_redirects.*/s/^#//g" /etc/sysctl.conf
echo "net.ipv4.conf.default.accept_redirects=0" >> /etc/sysctl.conf
sysctl -w net.ipv4.conf.all.accept_redirects=0
sysctl -w net.ipv4.conf.default.accept_redirects=0

# Disable secure ICMP redirects
sed -i "/ net.ipv4.conf.all.secure_redirects.*/s/^# //g" /etc/sysctl.conf
echo "net.ipv4.conf.default.secure_redirects=0" >> /etc/sysctl.conf
sysctl -w net.ipv4.conf.all.secure_redirects=0
sysctl -w net.ipv4.conf.default.secure_redirects=0

# Log suspicious packets
sed -i "/net.ipv4.conf.all.log_martians.*/s/^#//g" /etc/sysctl.conf
echo "net.ipv4.conf.default.log_martians=1" >> /etc/sysctl.conf
sysctl -w net.ipv4.conf.all.log_martians=1
sysctl -w net.ipv4.conf.default.log_martians=1

# Ignore broadcast ICMP requests
echo "net.ipv4.icmp_echo_ignore_broadcasts=1" >> /etc/sysctl.conf
sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
# Enable TCP SYN Cookies
sed -i "/net.ipv4.tcp_syncookies.*/s/^#//g" /etc/sysctl.conf
sysctl -w net.ipv4.tcp_syncookies=1

# Install TCP Wrappers
apt -y install tcpd

chown root:root /etc/hosts.allow
chmod 644 /etc/hosts.allow
chown root:root /etc/hosts.deny
chmod 644 /etc/hosts.deny
sysctl -w net.ipv4.route.flush=1



####SSH

# Set /etc/ssh/sshd_config ownership and access permissions
chown root:root /etc/ssh/sshd_config
chmod 600 /etc/ssh/sshd_config
# Set SSH MaxAuthTries to 3
sed -i "s/#MaxAuthTries 6/MaxAuthTries 3/g" /etc/ssh/sshd_config
# Disable SSH root login
sed -i "s/#PermitRootLogin prohibit-password/PermitRootLogin no/g" /etc/ssh/sshd_config
# Configure SSH Idle Timeout Interval
sed -i "s/#ClientAliveInterval 0/ClientAliveInterval 300/g" /etc/ssh/sshd_config
sed -i "s/#ClientAliveCountMax 3/ClientAliveCountMax 0/g" /etc/ssh/sshd_config

service sshd restart



###USERS
	
# Prevent root-owned files from accidentally becoming accessible to non-privileged users
usermod -g 0 root
# Disallow non-local logins to privileged accounts
sed -i "/-:wheel:ALL EXCEPT LOCAL.*/s/^#//g" /etc/security/access.conf
# Increase the delay time between login prompts (10sec)
sed -i "s/delay=[[:digit:]]\+/delay=10000000/" /etc/pam.d/login


